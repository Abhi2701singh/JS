------------   JAVA SCRIPT    -------------

-> Java script is an interpreted, client side ,event-based, object-oriented scripting language.

-> invented in 1995 at Netscape Corportion (LiveScript)

-> it is a case sensitive language.

## what can javascript do ?

1- javascript can dynamically modify an html page.

2- js can validate user input.

3- js can be used to create cookies.

4- js is full-feature programming language.

5- js user interaction does not require any       communication with the server.

## what makes js unique ?

1- support all browsers.
2- complex things are done simply.
3- full integration with htlm & css.

## js frameworks and libraries.

1- Angular
2- React
3- jQuery
4- Vue.js
5- Node.js

## how to use internal javascript ?

-> js can be insert into documents by using the script tag.

-> the script tag provide a block to write tha js program.

<script type="text/javascript">
      ..................
      ..................
      ..................
</script>

## how to use external js?

-> to use the pre-define program of any js library.

-> create name.js
-> link html page 
   <script src="name.js"></script>

## important function of js-

1- alert() - it is used to alert the user that something has happened.

2- confirm() - opens up a confirm/cancel dialog and return true/false depending on user's click.

3- console.log() - writes information to the browser console, good for debugging purpose.

4- document.write() - write directly to the html document.

5- prompt() - cretes an dialogue for user input.

## Variable in js

-> variables are container which hold reusable dat.
-> it is the basic unit of strong in a program.
-> the value stored in a variable can be changed during program execute.

var variable_name = "value" ;

## scope  and lifetime :-

-> variable declare within a function are local to that function.
-> variable declare outside of any function are global variable.

-> lacal varialble's life time is with the block of its declaration.

-> global variable's life time is throughout the program.


## JS DOM function:-

DOM (Document object Method)

1- document.getElementById()
2- document.getElementByClassName()
3- innerHTML()

## String Concatenation in JS:-

    var x = "hello";
    var y = " everyone";

    var z = x + y;
    alert(z);

    var x = "hello";
    var y = " everyone";

    var z = x + y + " there!";
    alert(z);

    var z = "abhinav" + " singh"
    alert(z);

    var z = "3"+"3";
    alert(z);

    var z = 3+3;
    alert(z);

##  Operator 

-> an operator is a symbol that tell the compiler which arithmetic or logical opertator to be performrd between the respective operands.

## types of operator 

1- arithmetic operator [+ , - , * , / , % , ++ , -- ]
2- logical operator [ && , || ]
3- ternary operator [ <condition>?<true>:<false> ]
4- assignment operator [ = , += , -= , *= , /= , %= ]
5- comparison operator [ == , != , > , < , >= , <= ]


 ## functions 

-> function are group of caode or program which is used more often.
-> it leads programming to code reusability and clean code.

## types of functions:

1- pre-defined function
2- user-defined function

syntax-
      function <function name>(){
        //----------------
          ---------------- 
           function body
          ---------------
          --------------- 
      }


## conditional statement-

conditional statement (control statement) used to change the flow of the program's execute.

two possible cases, either true or flase.

## types of conditional statement-

1- if :
      ->if prove true, performes a function or display information.

      if(condition){
        ---------
        ---------
      }

2- if-else :
      ->if proved true, performs a task.
      ->if false performs any other task.

      if(condition){
        ----------
        ----------
      }
      else{
        ----------
        ----------
      }

3- if elseif :
      ->if proved true, performs a task.
      ->if false check another if condition.

      if(condition 1){
        -----------
        -----------
      }
      else if(condition){
        -----------
        -----------
      }
      else if(condition){
        --------------
        --------------
      }
      else{
        --------------
        --------------
      }


## Array-

-> array is agroup of continuous memory location.
-> it is used to store multiple values into a single variable.

## declaration of an array-

1-

var house=[];

// initialization while declaring

var house=['1bhk','2bhk','3bhk','4bhk'];

// initialization after declaring

house[0]='1bhk';
house[1]='2bhk';
house[2]='3bhk';
house[3]='4bhk';

2-

var house = new array()

var house = new array(10,20,30,40,50);

var house = ['1bhk',3000,'2bhk',5000];

---------------------------------------------

## looping statement-

-> a loop is used to repeat a block of code unit the specified condition is met.
-> when similar task is needed to be done again and again.
-> save time and leads to code reusability.

## for loop-

syntax:
     for(initialization: test condition : inc/dec)
     {
      -------------------
      -------------------
     }

## while loop-  

A while loop is to execute a statement or code block repeatedly as long as condition is true.

Once the condition becomes false, the loop terminates.

it is also called entry control loop.

Syntax:
      while(expression){
        ----------------
        ----------------
      }

## forEach loop- 

A forEach loop (method) is used to get data from js array or object.

The method call a function once for each element in an array in order.

Syntax:
      var cars=["car1","car2","car3","car4"];

      cars.forEach(myfunction);

      function myfunction(item,index,array){
        -----------------
        -----------------
      }
[
  item - (here "car1") required parameter
  index - (here 0 for "car1") optional
  array - (here cars) optional
]

## Continue statement-

The continue statement is used to skip the current iteration and go to next iteration.

Syntax:
     continue;
     
## break statement-

The break statement is used to break the execution of current loop or switch case.

As soon as it is encountered the flow of the program goes to next statement of loop or switch case.

Syntax:
      break;


## switch case-

Switch statement is used to choose in between many cases.

It work same as nested if-elseif-else statement.

Syntax:
      Switch(x){
        
        case 'val1':
        ------------
        break;

        case 'val2':
        ------------
        break;

        case 'val3':
        ------------
        break;

        case 'val4':
        ------------
        break;

        default:
        ------------
        break;
      }

## list of method-

1- valueOf() - to print the data of array.
2- isArray() - check if the variable is an array or not.
3- concat() - join several array into one.
4- indexOf() - returns the primitive value of the specified object.
5- join() - combine elements of an array into a single string and return the string.

6- pop() - remove the last element of an array.
7- push() - add a new element at the end.
8- reverse() - sort element in a descending order.
9- shift() - remeove the first element of an array.
10- slice() - pull a copy of a portion of an array into a new array.

## date method-

1- Date() - to get the current date and time details according to the browser.
2- getFullYear() - get the year as a four digit number.
3- getMonth() - get the month as a number (0-11).
4- getDate() - get the day as a number(1-31).
5- getHours() - get the hours(0-23).
6- getMinutes() - get the minute(0-59)
7- getSecond() - get the second (0-59)
8- getMillisecond() - get the millisecond(0-999)
9- getTime() - get the time (millisecond since january 1,1970).
10- getDay() - get the weekday as a number (0-6).

## Typeof operator-

## Events-

   -> In programming, event is an occurrence of any action.
   -> when we use js in html pages, js can react with event.
   -> eg. when user click the mouse button , or press any key on keyboard.

# mouse event---

  1- onclick() - the event occur when user clicks on an element.
  2- oncontextmenu() - user right clicks on an element to open a context menu.
  3- ondblclick() - the user double click on an elemnt.
  4- onmousedown() - user presses a mouse button over an element.
  5- onmouseleave() - pointer moves out of an element.
  6- onmousemove() - the pointer is moving while it is over an element.
  7- onmouseover() - when the pointer is moved onto an element or one of its children.
  8- onmouseout() - user moves the mouse pointer out of an element or one of its children

  9- onmouseup() - the user relese a mouse button while over an element.

# keyboard events---

  1- onkeydown() - when the user is pressing a key down.
  2- onkeypress() - the moment the user start pressing a key.
  3- onkeyup() - the user release a key.

# form events---

  1- onblur() - when an element loses focus.
  2- onchange() - the content of form element change.
  3- onfocus() - an element gets focus.
  4- oninput() - user input on an element.
  5- oninvalid() - an element is invalid.
  6- onreset() - a form is reset.
  7- onsearch() - the user writes something in a search field.
  8- onselect() - the user select same text.
  9- onsubmit() - a form is submitted.
  10- onload() - when document is fully loaded. 


## DOM methods-  

1- getElementsByName()
2- getElementsByTagName()

## setInterval()---

  -> the setinterval() method repeats a given function at every given time interval.
  -> syntax:
          window.setInterval(function, milliseconds);
  -> function: first parameter is the function to be executed.
  -> milliseconds: indicates the length of time interval between each execution.

## setTimeOut() ---
  -> the setTimeout() method executes a function after waithing a specified number of milliseconds.
  -> syntax:
          window.setTimeout(function name , millisecond)
  -> first parameter is the function to be executed
  -> indicates the number of millisecond before execution takes place. 1sec = 1000 ms.

## 